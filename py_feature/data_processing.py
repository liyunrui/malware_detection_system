#!/usr/bin/python3
# -*-coding:utf-8
'''
Created on Fri March 1 22:22:35 2017

@author: Ray

'''
import warnings
warnings.filterwarnings("ignore")

import pandas as pd
import numpy as np
import utils # made by author for efficiently dealing with data
import datetime # datetime preprocessing
import gc # reduce memory

##################################
# loading data
##################################
train = pd.read_csv('../Raw_Data/training-set.csv', header = None)
test = pd.read_csv('../Raw_Data/testing-set.csv', header = None)
query_log = utils.read_multiple_csv('../Raw_Data/query_log') # 從2017年三月到2017年五月的可疑檔案紀錄
test.columns = ['id','label'] 
train.columns = ['id','label']
query_log.columns = ['id','CustomerID','QueryTS','ProductID']
# CustomerID: 使用者裝置ID，用來識別同一個裝置
# QueryTS: 該筆資料發生的時間
# ProductID: 該使用者裝置的產品代碼


def unixtimestamp_to_datetime(unixtimestamp):
    '''
    Convert Unix timestamp to datetime in Python
    
    Parameters
    ----------
    unixtimestamp : str
        a type of time stamp
    
    '''
    return datetime.datetime.fromtimestamp(int(unixtimestamp)).strftime('%Y-%m-%d %H:%M:%S')

# create query_datetime 
query_log['query_datetime'] = query_log.QueryTS.apply(unixtimestamp_to_datetime)

# ProductID Cleaning
query_log['ProductID'] = query_log.ProductID.map(str)
query_log['ProductID'] = query_log.ProductID.apply(lambda x: '055649' if x == '55649' else x)

gc.collect()
col = ['id','CustomerID','query_datetime','ProductID']

# merge
training_set = pd.merge(train, query_log[col], on = 'id', how = 'left')
testing_set = pd.merge(test, query_log[col], on = 'id', how = 'left')

# output
training_set.to_csv('../input/train.csv.gz', index=False, compression='gzip')
testing_set.to_csv('../input/test.csv.gz', index=False, compression='gzip')


