import pandas as pd
import numpy as np
import datetime # datetime preprocessing
import utils # made by author for efficiently dealing with data

##################################
# loading data
##################################
train = pd.read_csv('../input/train.csv.gz', compression='gzip', dtype={'ProductID': str})
test = pd.read_csv('../input/test.csv.gz', compression='gzip', dtype={'ProductID': str})

print('loading finish')

##################################
# pre-processing
##################################

# convert query_datetime(str type) column to datetime type
train['query_datetime'] = pd.to_datetime(train.query_datetime)
test['query_datetime'] = pd.to_datetime(test.query_datetime)

# ProductID Cleaning
train['ProductID'] = train.ProductID.map(str)
train['ProductID'] = train.ProductID.apply(lambda x: '055649' if x == '55649' else x)
test['ProductID'] = test.ProductID.map(str)
test['ProductID'] = test.ProductID.apply(lambda x: '055649' if x == '55649' else x)

print('pre-processing done')

def product_one_hot_encoding(x):
    '''
    make ProductID become one-hot encoding form
    
    parameters:
    --------
    x: DataFrame
    '''    
    new_dataframe = {}
    for col in x.columns:
        new_dataframe[col] = [x[col].sum()]
    return  pd.DataFrame(new_dataframe)
#using train + test
df_all = pd.concat((train, test))[['id', 'ProductID']]
#preprocessing for product one-hot encoding(這個程式涉及到哪些商品)
df_all = df_all.groupby(by = ['id','ProductID']).count().reset_index('ProductID')
df_all = pd.get_dummies(df_all, columns=['ProductID'])
df_all = df_all.groupby('id').apply(product_one_hot_encoding).reset_index().drop('level_1',axis= 1)

#-------------------------
# train
#-------------------------

train = train[['id']]
train = train.drop_duplicates('id')
train = pd.merge(train, df_all, on = 'id', how = 'left')
#-------------------------
# test
#-------------------------

test = test[['id']]
test = test.drop_duplicates('id')
test = pd.merge(test, df_all, on = 'id', how = 'left')
#-------------------------
#save
#-------------------------

train.to_csv('../feature/{}/product_one_hot.csv.gz'.format('train'), index = False, compression='gzip')
test.to_csv('../feature/{}/product_one_hot.csv.gz'.format('test'), index = False, compression='gzip')
