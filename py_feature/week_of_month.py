import pandas as pd
import numpy as np
import datetime # datetime preprocessing
import utils # made by author for efficiently dealing with data
from math import ceil 

##################################
# loading data
##################################
train = pd.read_csv('../input/train.csv.gz', compression='gzip', dtype={'ProductID': str})
test = pd.read_csv('../input/test.csv.gz', compression='gzip', dtype={'ProductID': str})

print('loading finish')
##################################
# pre-processing
##################################


# convert query_datetime(str type) column to datetime type
train['query_datetime'] = pd.to_datetime(train.query_datetime)
test['query_datetime'] = pd.to_datetime(test.query_datetime)

#-----------
# datetime feature preprocessing
#-----------
def week_of_month(dt):
    """ 
    Returns the week of the month for the specified date.
    
    parameters
    -----
    dt: datetime64[ns]
    
    """
    first_day = dt.replace(day=1) # the day of month for the date(dt)
    dom = dt.day # Between 1 and the number of days in the given month of the given year(30 or 31 like that).
    adjusted_dom = dom + first_day.weekday() # Return the day of the week as an integer, where Monday is 0 and Sunday is 6
    return int(ceil(adjusted_dom/7.0))

# 一個月中的第幾個禮拜[0~3]
train['event_week_of_month'] = train['query_datetime'].apply(week_of_month)
# 一個月中的第幾個禮拜[0~3]
test['event_week_of_month'] = test['query_datetime'].apply(week_of_month)

print('pre-processing done')

def week_of_month_one_hot_encoding(x):
    '''
    make ProductID become one-hot encoding form
    
    parameters:
    --------
    x: DataFrame
    '''    
    new_dataframe = {}
    for col in x.columns[1:]:
        if x[col].sum() > 0:
            t = 1
        else:
            t = 0
        new_dataframe[col] = [t]
    return  pd.DataFrame(new_dataframe)

#-------------------------
# train
#-------------------------

train = pd.get_dummies(train[['id','event_week_of_month']], columns=['event_week_of_month'])
train = train.groupby('id').apply(week_of_month_one_hot_encoding).reset_index().drop('level_1', axis = 1)
print ('train done')

#-------------------------
# test
#-------------------------
test = pd.get_dummies(test[['id','event_week_of_month']], columns=['event_week_of_month'])
test = test.groupby('id').apply(week_of_month_one_hot_encoding).reset_index().drop('level_1', axis = 1)
print ('test done')

#-------------------------
#save
#-------------------------

train.to_csv('../feature/{}/week_of_month_one_hot_encoding.csv.gz'.format('train'), index = False, compression='gzip')
test.to_csv('../feature/{}/week_of_month_one_hot_encoding.csv.gz'.format('test'), index = False, compression='gzip')


