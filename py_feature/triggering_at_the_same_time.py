import pandas as pd
import numpy as np
import datetime # datetime preprocessing
import utils # made by author for efficiently dealing with data

##################################
# loading data
##################################
train = pd.read_csv('../input/train.csv.gz', compression='gzip', dtype={'ProductID': str})
test = pd.read_csv('../input/test.csv.gz', compression='gzip', dtype={'ProductID': str})

print('loading finish')

##################################
# pre-processing
##################################

# convert query_datetime(str type) column to datetime type
train['query_datetime'] = pd.to_datetime(train.query_datetime)
test['query_datetime'] = pd.to_datetime(test.query_datetime)


def checkEqual(iterator):
    '''
    itentify if elements in the list are identical, givne the list.
    '''
    return len(set(iterator)) <= 1
def identify_a_program_trigger_customers_at_the_same_time(x):
    '''
    identify whether a computer programe is exposed to those users at the same time, in the beginning.
    
    Note taht:
        即使duration > 0, 他們還是有可能這隻程式是在不同天觸發不同使用者)
    
    parameters:
    --------
    x: DataFrame
    '''
    if checkEqual([t for t in x.first_time.dt.date]):
        x['triggering_at_the_same_time'] = 1
    else:
        x['triggering_at_the_same_time'] = 0
    return x

#-------------------------
# train
#-------------------------

train = train.groupby(by = ['id','CustomerID']).query_datetime.min().to_frame('first_time') \
.groupby(by = ['id']).apply(identify_a_program_trigger_customers_at_the_same_time)
train = train.reset_index().drop_duplicates('id')[['id','triggering_at_the_same_time']]

#-------------------------
# test
#-------------------------

test = test.groupby(by = ['id','CustomerID']).query_datetime.min().to_frame('first_time') \
.groupby(by = ['id']).apply(identify_a_program_trigger_customers_at_the_same_time)
test = test.reset_index().drop_duplicates('id')[['id','triggering_at_the_same_time']]

#-------------------------
#save
#-------------------------

train.to_csv('../feature/{}/triggering_at_the_same_time.csv.gz'.format('train'), index = False, compression='gzip')
test.to_csv('../feature/{}/triggering_at_the_same_time.csv.gz'.format('test'), index = False, compression='gzip')
