import pandas as pd
import numpy as np
import datetime # datetime preprocessing
import utils # made by author for efficiently dealing with data
from math import ceil 

##################################
# loading data
##################################
train = pd.read_csv('../input/train.csv.gz', compression='gzip', dtype={'ProductID': str})
test = pd.read_csv('../input/test.csv.gz', compression='gzip', dtype={'ProductID': str})

print('loading finish')
##################################
# pre-processing
##################################


# convert query_datetime(str type) column to datetime type
train['query_datetime'] = pd.to_datetime(train.query_datetime)
test['query_datetime'] = pd.to_datetime(test.query_datetime)

#-----------
# datetime feature preprocessing
#-----------

# Convert date time to the day of the week [0~6]. For example, Monday is 0 and Sunday is 6. 
train['event_day_of_the_week'] = train['query_datetime'].dt.weekday 


test['event_day_of_the_week'] = test['query_datetime'].dt.weekday 

print('pre-processing done')

def day_of_the_week_one_hot_encoding(x):
    '''
    make ProductID become one-hot encoding form
    
    parameters:
    --------
    x: DataFrame
    '''    
    new_dataframe = {}
    for col in x.columns[1:]:
        if x[col].sum() > 0:
            t = 1
        else:
            t = 0
        new_dataframe[col] = [t]
    return  pd.DataFrame(new_dataframe)

#-------------------------
# train
#-------------------------

train = pd.get_dummies(train[['id','event_day_of_the_week']], columns=['event_day_of_the_week'])
train = train.groupby('id').apply(day_of_the_week_one_hot_encoding).reset_index().drop('level_1', axis = 1)
print ('train done')

#-------------------------
# test
#-------------------------
test = pd.get_dummies(test[['id','event_day_of_the_week']], columns=['event_day_of_the_week'])
test = test.groupby('id').apply(day_of_the_week_one_hot_encoding).reset_index().drop('level_1', axis = 1)
print ('test done')

#-------------------------
#save
#-------------------------

train.to_csv('../feature/{}/day_of_the_week_one_hot_encoding.csv.gz'.format('train'), index = False, compression='gzip')
test.to_csv('../feature/{}/day_of_the_week_one_hot_encoding.csv.gz'.format('test'), index = False, compression='gzip')


